[{"C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\routes.js":"1","C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\services\\api.js":"2","C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\App.js":"3","C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\pages\\Investments\\index.js":"4","C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\index.js":"5","C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\pages\\Companies_Contracts\\index.js":"6","C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\pages\\Hospitals_Sum\\index.js":"7","C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\pages\\Companies_Sum\\index.js":"8","C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\pages\\Hospitals_Contracts\\index.js":"9","C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\pages\\Hospitals\\index.js":"10","C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\pages\\Companies\\index.js":"11","C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\pages\\Suspect_Contracts\\index.js":"12"},{"size":1539,"mtime":1608579197581,"results":"13","hashOfConfig":"14"},{"size":176,"mtime":1608662120841,"results":"15","hashOfConfig":"14"},{"size":157,"mtime":1607458690143,"results":"16","hashOfConfig":"14"},{"size":4532,"mtime":1608579394845,"results":"17","hashOfConfig":"14"},{"size":199,"mtime":1607357929106,"results":"18","hashOfConfig":"14"},{"size":2546,"mtime":1608307947172,"results":"19","hashOfConfig":"14"},{"size":2612,"mtime":1608302644809,"results":"20","hashOfConfig":"14"},{"size":2575,"mtime":1608307959463,"results":"21","hashOfConfig":"14"},{"size":2583,"mtime":1608302710566,"results":"22","hashOfConfig":"14"},{"size":1820,"mtime":1608578392848,"results":"23","hashOfConfig":"14"},{"size":3049,"mtime":1608578367388,"results":"24","hashOfConfig":"14"},{"size":4025,"mtime":1608988353393,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xqd32a",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},"C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\routes.js",[],"C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\services\\api.js",[],"C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\App.js",[],["58","59"],"C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\pages\\Investments\\index.js",["60","61"],"import React, {useEffect, useState} from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\nimport './styles.css'\r\n\r\n\r\n\r\nexport default function Profile() {\r\n    const [contracts, setContracts] = useState([])\r\n    const [obj, setObj] = useState('');\r\n    const history = useHistory()\r\n    \r\n    if(contracts === undefined || contracts === '' || contracts === null){\r\n        alert('Não existem dados entre entre hospital e empresa')\r\n        console.log(contracts)\r\n    }\r\n\r\n    \r\n\r\n    async function handleSearch(e){\r\n        e.preventDefault()\r\n        try {\r\n        const data = {\r\n            obj: obj,\r\n        }\r\n       \r\n            console.log(data)\r\n            await api.post('', data ).then(res => {\r\n                setContracts(res.data)\r\n            })  \r\n            history.push('/')\r\n        } catch (err) {\r\n            alert('Erro ao conectar')\r\n            \r\n        }\r\n    }\r\n    const optionsRoutes = [\r\n        {\r\n          value: \"\",\r\n          title: \"Empresas\",\r\n        },\r\n        {\r\n          value: \"companies-contracts\",\r\n          title: \"Número de Contratos\",\r\n        },\r\n        {\r\n          value: \"companies-sum\",\r\n          title: \"Lucros\"\r\n        },\r\n      ];\r\n    const [selectedOptionRoutes, setSelectedOptionRoutes] = useState(optionsRoutes[0]);\r\n    const optionsRoutes1 = [\r\n        {\r\n          value: \"\",\r\n          title: \"Hospitais\",\r\n        },\r\n        {\r\n          value: \"hospitals-contracts\",\r\n          title: \"Número de Contratos\",\r\n        },\r\n        {\r\n          value: \"hospitals-sum\",\r\n          title: \"Lucros\"\r\n        },\r\n      ];\r\n    const [selectedOptionRoutes1, setSelectedOptionRoutes1] = useState(optionsRoutes1[0]);\r\n\r\n    useEffect(() => {\r\n        \r\n        \r\n    })\r\n      \r\n    \r\n    return (\r\n        <div className=\"profile-container\">\r\n        <header >\r\n        <form >\r\n            \r\n                <select\r\n                    className=\"button p\"\r\n                    value={selectedOptionRoutes.title}\r\n                    onChange={(e) =>\r\n                    setSelectedOptionRoutes(\r\n                        optionsRoutes.find(option => (option.value === e.target.value))\r\n                    )\r\n                    }\r\n                >\r\n                    {optionsRoutes.map((option) => (\r\n                    <option key={option.value} value={option.value}>\r\n                        {option.title}\r\n                    </option>\r\n                    ))}\r\n                </select>\r\n                <select\r\n                    className=\"button l\"\r\n                    value={selectedOptionRoutes1.title}\r\n                    onChange={(e) =>\r\n                    setSelectedOptionRoutes1(\r\n                        optionsRoutes1.find(option => (option.value === e.target.value))\r\n                    )\r\n                    }\r\n                >\r\n                    {optionsRoutes1.map((option) => (\r\n                    <option key={option.value} value={option.value}>\r\n                        {option.title}\r\n                    </option>\r\n                    ))}\r\n                </select>\r\n                <Link to=\"/suspect-contracts\" className=\"button n\">Contratos Suspeitos</Link>\r\n        </form>  \r\n        \r\n        <Redirect to={selectedOptionRoutes.value} />\r\n        <Redirect to={selectedOptionRoutes1.value} />\r\n        </header>\r\n        <form onSubmit={handleSearch}>\r\n            <input placeholder=\"Pesquise pelo objeto do contrato\" value={obj} onChange={e => setObj(e.target.value)} ></input>\r\n            <button className=\"button\" type=\"submit\">Pesquisar</button>\r\n        </form>\r\n        <h1>Resultado da Pesquisa</h1>\r\n        <ul>\r\n            {contracts.map(contract => (\r\n            <li>\r\n                <strong>Data de Publicação:</strong>\r\n                <p>{contract.dataPub}</p>  \r\n\r\n                <strong>Descrição:</strong>\r\n                <p>{contract.descr == '-' || contract.descr == 'Ajuste Directo n.º 04/10000153/2010' ? contract.obj: contract.descr}</p>\r\n                \r\n                <strong>Hospital:</strong>\r\n                <p>{contract.adjudicante}</p> \r\n\r\n                <strong>Empresa:</strong>\r\n                <p>{contract.adjudicatario}</p>\r\n\r\n                <strong>Valor Contratado:</strong>\r\n                \r\n                <p>{Intl.NumberFormat('pt-PT', { style: 'currency', currency: 'EUR'}).format(contract.pContr)}</p>\r\n            </li>\r\n            ))}\r\n        </ul>\r\n      </div> \r\n    )\r\n}","C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\index.js",[],["62","63"],"C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\pages\\Companies_Contracts\\index.js",["64"],"C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\pages\\Hospitals_Sum\\index.js",["65"],"import React, {useEffect, useState} from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\nimport './styles.css'\r\n\r\n\r\n\r\n\r\n  \r\n\r\nexport default function Companies() {\r\n    const history = useHistory()\r\n    const options = [\r\n        {\r\n          value: \"\",\r\n          title: \"Todos os anos\",\r\n        },\r\n        {\r\n          value: \"-2008\",\r\n          title: \"2008\",\r\n        },\r\n        {\r\n          value: \"-2009\",\r\n          title: \"2009\"\r\n        },\r\n        {\r\n            value: \"-2010\",\r\n            title: \"2010\"\r\n        },\r\n        {\r\n            value: \"-2011\",\r\n            title: \"2011\"\r\n        }\r\n      ];\r\n      const [selectedOption, setSelectedOption] = useState(options[0]);\r\n      const [hospitals, setHostpitals] = useState([]);\r\n      \r\n\r\n      \r\n    \r\n    \r\n    \r\n\r\n    \r\n    useEffect(() => {\r\n        api.get('search-top-10-hospitals' + selectedOption.value).then(res => {\r\n            setHostpitals(res.data)\r\n        })\r\n        \r\n    })\r\n\r\n    //const history = useHistory()\r\n\r\n    return (\r\n        <div className=\"profile-container\">\r\n        <header>\r\n        <Link to=\"/\" className=\"button\">Home</Link>\r\n        </header>\r\n        <form align=\"center\">\r\n            <label align=\"center\" >\r\n                <h3>Pesquisa:</h3>\r\n            </label>\r\n            <div className=\"select\">\r\n                <select\r\n                    value={selectedOption.title}\r\n                    onChange={(e) =>\r\n                    setSelectedOption(\r\n                        options.find(option => (option.value === e.target.value))\r\n                    )\r\n                    }\r\n                >\r\n                    {options.map((option) => (\r\n                    <option key={option.value} value={option.value}>\r\n                        {option.title}\r\n                    </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        </form>\r\n        <h1> Hospitais ({selectedOption.title} - Mais Investidos)</h1>\r\n        <ul>\r\n            {hospitals.map(hospitals => (\r\n            <li>\r\n                <strong>Nome da Hospital:</strong>\r\n                <p>{hospitals.hospital}</p>  \r\n\r\n                <strong>Valor dos Contratos (Total):</strong>\r\n                <p>{Intl.NumberFormat('pt-PT', { style: 'currency', currency: 'EUR'}).format(hospitals.sum)}</p>\r\n                <button type=\"button\" onClick={() => (history.push('/hospitals/' + (hospitals.hospital).match(/\\((.*)\\)/).pop()))}>Detalhes</button>\r\n            </li>\r\n            ))}\r\n        </ul>\r\n      </div> \r\n    )\r\n}",["66","67"],"C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\pages\\Companies_Sum\\index.js",[],["68","69"],"C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\pages\\Hospitals_Contracts\\index.js",[],"C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\pages\\Hospitals\\index.js",["70"],"C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\pages\\Companies\\index.js",["71"],"import React, {useEffect, useState} from 'react';\r\nimport { Link, Redirect, useParams } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\nimport './styles.css'\r\n\r\n\r\n\r\n\r\n  \r\n\r\nexport default function Companies() {\r\n    const options = [\r\n        {\r\n          value: \"\",\r\n          title: \"Todos os anos\",\r\n        },\r\n        {\r\n          value: \"-2008\",\r\n          title: \"2008\",\r\n        },\r\n        {\r\n          value: \"-2009\",\r\n          title: \"2009\"\r\n        },\r\n        {\r\n            value: \"-2010\",\r\n            title: \"2010\"\r\n        },\r\n        {\r\n            value: \"-2011\",\r\n            title: \"2011\"\r\n        }\r\n      ];\r\n      const [selectedOption, setSelectedOption] = useState(options[0]);\r\n      const [contract, setContract] = useState([]);\r\n    \r\n    let id = useParams();\r\n    \r\n    async function handleIncident(id){\r\n        console.log(id.id)\r\n        const data = {\r\n            company: id.id\r\n        }\r\n        api.post('/contracts/company/', data).then(res => {\r\n            setContract(res.data)\r\n        })\r\n    }\r\n    \r\n\r\n    \r\n    useEffect(() => {\r\n        handleIncident(id)\r\n    })\r\n\r\n    //const history = useHistory()\r\n\r\n    return (\r\n        <div className=\"profile-container\">\r\n        <header>\r\n        <Link to=\"/\" className=\"button\">Home</Link>\r\n         \r\n        </header>\r\n        \r\n        <form align=\"center\">\r\n            <label align=\"center\" >\r\n                <h3>Pesquisa:</h3>\r\n            </label>\r\n                <div className=\"select\" >\r\n                <select \r\n                    value={selectedOption.title}\r\n                    onChange={(e) =>\r\n                    setSelectedOption(\r\n                        options.find(option => (option.value === e.target.value))\r\n                    )\r\n                    }\r\n                >\r\n                    {options.map((option) => (\r\n                    <option key={option.value} value={option.value}>\r\n                        {option.title}\r\n                    </option>\r\n                    ))}\r\n                </select>\r\n                </div>\r\n        </form>\r\n        <h1>Empresa </h1>\r\n        <ul>\r\n        {contract.map(contract => (\r\n            <li>\r\n                <strong>Data de Publicação:</strong>\r\n                <p>{contract.dataPub}</p>  \r\n\r\n                <strong>Tipo de Procedimento:</strong>\r\n                <p>{contract.tipoProc}</p>\r\n\r\n                <strong>Descrição:</strong>\r\n                <p>{contract.descr}</p>\r\n\r\n                <strong>Objeto do Contrato:</strong>\r\n                <p>{contract.obj}</p>\r\n                \r\n                <strong>Hospital:</strong>\r\n                <p>{contract.adjudicante}</p> \r\n\r\n                <strong>Empresa:</strong>\r\n                <p>{contract.adjudicatario}</p>\r\n\r\n                <strong>Valor Contratado:</strong>\r\n                \r\n                <p>{Intl.NumberFormat('pt-PT', { style: 'currency', currency: 'EUR'}).format(contract.pContr)}</p>\r\n            </li>\r\n            ))}\r\n        </ul>\r\n      </div> \r\n    )\r\n}","C:\\Users\\NOMAD\\OneDrive\\Documents\\GitHub\\data-analysis-software\\frontend\\src\\pages\\Suspect_Contracts\\index.js",["72","73","74"],"import React, {useEffect, useState} from 'react';\r\nimport { Link, Redirect, useParams } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\nimport './styles.css'\r\n\r\n\r\n\r\n\r\n  \r\n\r\nexport default function Companies() {\r\n    const options = [\r\n        {\r\n            value: \"\",\r\n            title: \"Categorias de contratos\",\r\n            fund: \"\"\r\n        },\r\n        {\r\n          value: \"-public_works_contracts\",\r\n          title: \"Empreitadas de obras públicas\",\r\n          fund: \"Artigo 19.º, alínea d) do Código dos Contratos Públicos\"\r\n        },\r\n        {\r\n          value: \"-acquisition_of_real_state\",\r\n          title: \"Aquisição de bens imóveis\",\r\n          fund: \"Artigo 20.º, n.º 1, alínea d) do Código dos Contratos Públicos\"\r\n        },\r\n        {\r\n          value: \"-purchasing_services\",\r\n          title: \"Aquisição de serviços\",\r\n          fund: \"Artigo 20.º, n.º 1, alínea d) do Código dos Contratos Públicos\"\r\n        },\r\n        {\r\n            value: \"-other_contracts\",\r\n            title: \"Outros Contratos\",\r\n            fund: \"Artigo 21.º, n.º 1, alínea c) do Código dos Contratos Públicos\"\r\n        },\r\n        {\r\n            value: \"-repeated_contracts\",\r\n            title: \"Contratos Repetidos\",\r\n            fund: \"\"\r\n        }\r\n      ];\r\n      const [selectedOption, setSelectedOption] = useState(options[0]);\r\n      const [contract, setContract] = useState([]);\r\n      \r\n    \r\n    \r\n    \r\n    async function suspect_contracts(){\r\n        api.get('suspect-contracts' + selectedOption.value).then(res => {\r\n            setContract(res.data)\r\n        })\r\n    }\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n        suspect_contracts()\r\n\r\n    })\r\n\r\n    //const history = useHistory()\r\n\r\n    return (\r\n        <div className=\"profile-container\">\r\n        <header>\r\n        <Link to=\"/\" className=\"button\">Home</Link>\r\n         \r\n        </header>\r\n        \r\n        <form align=\"center\">\r\n            <label align=\"center\" >\r\n                <h3>Pesquisa:</h3>\r\n            </label>\r\n                <div className=\"select\" >\r\n                <select \r\n                    value={selectedOption.title}\r\n                    onChange={(e) =>\r\n                    setSelectedOption(\r\n                        options.find(option => (option.value === e.target.value))\r\n                    )\r\n                    }\r\n                >\r\n                    {options.map((option) => (\r\n                    <option key={option.value} value={option.value}>\r\n                        {option.title}\r\n                    </option>\r\n                    ))}\r\n                </select>\r\n                </div>\r\n        </form>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        \r\n\r\n        <h4 align=\"center\">{selectedOption.fund == \"\" ? \"\": \"Fundamento: \" + selectedOption.fund}</h4>\r\n        \r\n        <h1>Contratos Suspeitos ({selectedOption.title})</h1>\r\n        <ul>\r\n        {contract.map(contract => (\r\n            <li>\r\n                <strong>Data de Publicação:</strong>\r\n                <p>{contract.dataPub}</p>  \r\n\r\n                <strong>Tipo de Contrato:</strong>\r\n                <p>{contract.tipoCont}</p>\r\n\r\n                <strong>Tipo de Procedimento:</strong>\r\n                <p>{contract.tipoProc}</p>\r\n\r\n                <strong>Descrição:</strong>\r\n                <p>{contract.descr}</p>\r\n\r\n                <strong>Objeto do Contrato:</strong>\r\n                <p>{contract.obj}</p>\r\n                \r\n                <strong>Fundamento:</strong>\r\n                <p>{contract.fund}</p>\r\n\r\n                <strong>Hospital:</strong>\r\n                <p>{contract.adjudicante}</p> \r\n\r\n                <strong>Empresa:</strong>\r\n                <p>{contract.adjudicatario}</p>\r\n\r\n                <strong>Valor Contratado:</strong>\r\n                <p>{Intl.NumberFormat('pt-PT', { style: 'currency', currency: 'EUR'}).format(contract.pContr)}</p>\r\n            \r\n                \r\n            </li>\r\n            ))}\r\n        </ul>\r\n      </div> \r\n    )\r\n}",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":128,"column":36,"nodeType":"81","messageId":"82","endLine":128,"endColumn":38},{"ruleId":"79","severity":1,"message":"80","line":128,"column":61,"nodeType":"81","messageId":"82","endLine":128,"endColumn":63},{"ruleId":"75","replacedBy":"83"},{"ruleId":"77","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":16,"nodeType":"87","messageId":"88","endLine":2,"endColumn":24},{"ruleId":"85","severity":1,"message":"86","line":2,"column":16,"nodeType":"87","messageId":"88","endLine":2,"endColumn":24},{"ruleId":"75","replacedBy":"89"},{"ruleId":"77","replacedBy":"90"},{"ruleId":"75","replacedBy":"91"},{"ruleId":"77","replacedBy":"92"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":16,"nodeType":"87","messageId":"88","endLine":2,"endColumn":24},{"ruleId":"85","severity":1,"message":"86","line":2,"column":16,"nodeType":"87","messageId":"88","endLine":2,"endColumn":24},{"ruleId":"85","severity":1,"message":"86","line":2,"column":16,"nodeType":"87","messageId":"88","endLine":2,"endColumn":24},{"ruleId":"85","severity":1,"message":"93","line":2,"column":26,"nodeType":"87","messageId":"88","endLine":2,"endColumn":35},{"ruleId":"79","severity":1,"message":"80","line":99,"column":49,"nodeType":"81","messageId":"82","endLine":99,"endColumn":51},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["94"],["95"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["94"],["95"],["94"],["95"],"'useParams' is defined but never used.","no-global-assign","no-unsafe-negation"]